@model OPAS2Model.PurchaseOrder

@section init_scripts {
  <script type="text/javascript">
    var initBag = {};
    // object datas
    initBag.workingMode = "updateAtStart";
    initBag.removeAttachPath = "/api/AttachFile/Remove/@ViewBag.guid";
    initBag.currentUserGuid = "@ViewBag.currentUserDTO.guid";
    initBag.guid = "@Model.guid";
    initBag.purchaseOrderId =  @ViewBag.purchaseOrderId;
    initBag.taskGuid = "@ViewBag.taskGuid";
    initBag.PRDocumentNo= "@if (ViewBag.PR != null) { @ViewBag.PR.documentNo }";

    // biz data
    initBag.bizData = JSON.parse(Base64.decode(
      '@Html.Raw(ViewBag.bizDataJsonEncoded)'));
    // detail table
    initBag.PODetails = JSON.parse(Base64.decode(
      '@Html.Raw(ViewBag.PODetails)'));
    // master datas
    initBag.pRDetailItemNames = JSON.parse(Base64.decode(
      '@Html.Raw(ViewBag.pRDetailItemNames)'));
    initBag.unitMeasureTypes = JSON.parse(Base64.decode(
      '@Html.Raw(ViewBag.unitMeasureTypesJsonEncoded)'));
    initBag.departmentList = JSON.parse(Base64.decode(
    '@Html.Raw(ViewBag.departmentListJsonEncoded)'));
    initBag.currencyTypeList = JSON.parse(Base64.decode(
      '@Html.Raw(ViewBag.currencyTypeListJsonEncoded)'));
    initBag.costCenterList = JSON.parse(Base64.decode(
      '@Html.Raw(ViewBag.costCenterListJsonEncoded)'));
    initBag.vendorList = JSON.parse(Base64.decode(
    '@Html.Raw(ViewBag.vendorListJsonEncoded)'));
    initBag.POTypes = JSON.parse(Base64.decode(
    '@Html.Raw(ViewBag.POTypeListJsonEncoded)'));

    // session datas
    initBag.PONextFlowActionPath = "/api/PO/UpdateAtStartFlowAction/";
    // flow datas
    initBag.availableFlowConnections = JSON.parse(Base64.decode(
      "@ViewBag.availableFlowConnectionsEncoded"));
    initBag.currentActivityGuid = "@ViewBag.currentActivityGuid";
    initBag.flowInstanceId = @ViewBag.flowInstanceId;

  </script>
}

@using (Html.BeginForm(
                "UpdateAtStartFlowAction",
                (string)ViewBag.flowTemplateCode, FormMethod.Post,
                htmlAttributes: new Dictionary<string, object> {
            { "v-on:submit.prevent", "onSubmitUpdateAtStartFlowAction" },
            { "autocomplete", "off"}  }))
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    @Html.Partial("DisplayBizDocumentHeaderPartial")

    @Html.HiddenFor(model => model.purchaseReqId)

    @Html.Partial("RenderMainFieldsForEditPartial")

    @Html.Partial("DisplayRemarkOfApproversPartial")

    @Html.Partial("RenderDetailFieldsForEditPartial")

    @Html.Partial("DisplayAttachListPartial")

    @Html.Partial("RenderAttachListOpsPartial")

    @Html.Partial("RenderCreateWorkflowOpsPartial")

  </div>

}
